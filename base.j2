from fastapi import APIRouter, Depends, HTTPException
import zeep
import inspect

from logging.config import dictConfig
import logging
from config import LogConfig

dictConfig(LogConfig().dict())
logger = logging.getLogger("wsdl-wrapper")

client = zeep.Client('{{WSDL_URL}}')

router = APIRouter(
    prefix="/soap",
    tags=["wsdl-wrapper"],
    responses={404: {"description": "Not found"}},
)

{% for operation in operations_definition %}
@router.get("/{{operation.operation_name.lower()}}/{% for param in operation.operation_params_lst %}{%raw%}{{% endraw %}{{param}}{%raw%}}{% endraw %}/{% endfor %}")
def call_{{operation.operation_name.lower()}}({{operation.operation_fun_params}}):

    logger.info(f"Called: call_{{operation.operation_name.lower()}} > {%raw%}{locals()}{% endraw %}")

    wsdl_params = {}
    {% for param in operation.operation_params_lst %}
    if {{param}} is not None:
      wsdl_params["{{param}}"] = {{param}}
    {% endfor %}
    return client.service.{{operation.operation_name}}(**wsdl_params)
{% endfor %}